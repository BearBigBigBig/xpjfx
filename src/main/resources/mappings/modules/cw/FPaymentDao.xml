<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tlkzzz.jeesite.modules.cw.dao.FPaymentDao">

	<sql id="fPaymentColumns">
		a.id AS "id",
		a.payment_date AS "paymentDate",
		a.payment_code AS "paymentCode",
		a.payment_account AS "paymentAccount",
		fao.bank_code AS "faName",
		a.travel_unit AS "travelUnit.id",
		csu.name AS "travelUnit.name",
		cst.name AS "travelUnit.code",
		a.travel_account AS "travelAccount",
		fat.bank_code AS "csName",
		a.payment_type AS "paymentType",
		a.payment_mode AS "paymentMode",
		a.je AS "je",
		a.jsr AS "jsr.id",
		cb.name AS "jsr.name",
		a.subject_code AS "subjectCode.id",
		ck.kmname AS "subjectCode.name",
		a.approval_status AS "approvalStatus",
		a.auditor AS "auditor.id",
		su.name AS "auditor.name",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.htje as "htje",
		rck.ddbh as "ddbh",
		a.thstatus as "thstatus"
	</sql>

	<sql id="fPaymentJoins">
		LEFT JOIN c_rkckddinfo rck ON rck.id = a.payment_code
		LEFT JOIN c_supplier csu ON csu.id=a.travel_unit
		LEFT JOIN c_store cst ON cst.id=a.travel_unit
		LEFT JOIN c_km ck ON ck.id=a.subject_code
		LEFT JOIN sys_user su ON su.id=a.auditor
		LEFT JOIN sys_user cb ON cb.id=a.jsr
		LEFT JOIN f_account fao ON fao.id=a.payment_account
		LEFT JOIN f_account fat ON fat.id=a.travel_account
	</sql>

	<select id="get" resultType="FPayment">
		SELECT
		<include refid="fPaymentColumns"/>
		FROM f_payment a
		<include refid="fPaymentJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="sfFindList" resultType="FPayment">
		SELECT a.* FROM (
		SELECT fp.*,cs.name as "csName",fa.name as "faName",cr.ddbh as "ddbh",1 as "fybs" FROM f_payment fp
		LEFT JOIN c_sclass cs ON cs.id=fp.travel_unit
		LEFT JOIN f_account fa ON fa.bank_code=fp.travel_account
		LEFT JOIN c_rkckddinfo cr ON cr.id=fp.payment_code
		<if test="paymentDate != null and paymentDate != ''">
		WHERE STR_TO_DATE(fp.payment_date,'%Y-%m-%d')=STR_TO_DATE(#{paymentDate},'%Y-%m-%d')
		</if>
		UNION ALL
		SELECT fr.*,cs.name as "csName",fa.name as "faName",cr.ddbh as "ddbh",2 as "fybs" FROM f_receipt fr
		LEFT JOIN c_sclass cs ON cs.id=fr.travel_unit
		LEFT JOIN f_account fa ON fa.bank_code=fr.travel_account
		LEFT JOIN c_rkckddinfo cr ON cr.id=fr.receipt_code
		<if test="paymentDate != null and paymentDate != ''">
		WHERE STR_TO_DATE(fr.receipt_date,'%Y-%m-%d') = STR_TO_DATE(#{paymentDate},'%Y-%m-%d')
		</if>
		) a
		ORDER BY a.payment_date DESC
	</select>

	<select id="getByPaymentCode" resultType="FPayment">
		SELECT
			<include refid="fPaymentColumns"/>
		FROM f_payment a
		<include refid="fPaymentJoins"/>
		WHERE a.payment_code = #{paymentCode}
	</select>

	<update id="paymentAddHtje">
		UPDATE f_payment SET
			htje=#{htje}
		WHERE id = #{id}
	</update>

	<select id="fyfindList" resultType="FPayment">
		SELECT o.*
		FROM (
		SELECT
		<include refid="fPaymentColumns"/>
		FROM f_payment a
		<include refid="fPaymentJoins"/>
		) o LIMIT ${fybs},10
	</select>

	<select id="findList" resultType="FPayment">
		SELECT
		<include refid="fPaymentColumns"/>
		FROM f_payment a
		<include refid="fPaymentJoins"/>
		<where>
			<if test="paymentType != null and paymentType != ''">
				AND FIND_IN_SET(a.payment_type,#{paymentType})
			</if>
			<if test="paymentDate != null and paymentDate != ''">
				AND a.payment_date &gt;= #{paymentDate}
			</if>
			<if test="paymentCode != null and paymentCode != ''">
				AND a.payment_code = #{paymentCode}
			</if>
			<if test="thstatus != null and thstatus != ''">
				AND a.thstatus &gt;= #{thstatus}
			</if>
			<if test="paymentAccount != null and paymentAccount != ''">
				AND a.payment_account = #{paymentAccount}
			</if>
			<if test="travelAccount != null and travelAccount != ''">
				AND a.travel_account = #{travelAccount}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="FPayment">
		SELECT
		<include refid="fPaymentColumns"/>
		FROM f_payment a
		<include refid="fPaymentJoins"/>
		<where>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO f_payment(
		id,
		payment_date,
		payment_code,
		payment_account,
		travel_unit,
		travel_account,
		payment_type,
		payment_mode,
		je,
		jsr,
		subject_code,
		approval_status,
		auditor,
		remarks,
		create_by,
		create_date,
		update_by,
		update_date,
		htje,
		thstatus
		) VALUES (
		#{id},
		#{paymentDate},
		#{paymentCode},
		#{paymentAccount},
		#{travelUnit.id},
		#{travelAccount},
		#{paymentType},
		#{paymentMode},
		#{je},
		#{jsr.id},
		#{subjectCode.id},
		#{approvalStatus},
		#{auditor.id},
		#{remarks},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{htje},
		#{thstatus}
		)
	</insert>

	<update id="update">
		UPDATE f_payment SET
			payment_date = #{paymentDate},
			payment_code = #{paymentCode},
			payment_account = #{paymentAccount},
			travel_unit = #{travelUnit.id},
			travel_account = #{travelAccount},
			payment_type = #{paymentType},
			payment_mode = #{paymentMode},
			je = #{je},
			jsr = #{jsr.id},
			subject_code = #{subjectCode.id},
			approval_status = #{approvalStatus},
			auditor = #{auditor.id},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			htje=#{htje},
			thstatus=#{thstatus}
		WHERE id = #{id}
	</update>

	<update id="thstatusUpdate">
		UPDATE f_payment SET
		approval_status = #{approvalStatus},
		thstatus = #{thstatus}
		WHERE id = #{id}
	</update>

	<update id="updateApprovalStatus">
		UPDATE f_payment SET
			approval_status = #{approvalStatus},
			auditor = #{auditor.id}
		WHERE id = #{id}
	</update>

	<update id="addHTJE">
		UPDATE f_payment a SET
		a.htje = a.htje+#{htje}
		WHERE id = #{id}
	</update>

	<update id="minHTJE">
		UPDATE f_payment a SET
		a.htje = a.htje-#{htje}
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM f_payment
		WHERE id = #{id}
	</update>

</mapper>